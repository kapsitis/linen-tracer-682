[
    {
        "concepts": [
            "divisibility",
            "decimal-notation"
        ],
        "genre": [],
        "id": "EE.PK.1994.7B.2",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.3or9.divides",
            "notation.divrules.pow2or5.divides"
        ]
    },
    {
        "concepts": [
            "integer-polynomials",
            "divisibility"
        ],
        "genre": [],
        "id": "EE.PK.1994.8B.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "remainder"
        ],
        "genre": [],
        "id": "EE.PK.1995.7B.2",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "fill-in-table"
        ],
        "id": "EE.PK.1995.8B.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.1996.7B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "arithmetic-progression"
        ],
        "genre": [
            "word-problem"
        ],
        "id": "EE.PK.1996.8B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "proportion"
        ],
        "genre": [],
        "id": "EE.PK.1996.9B.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.PK.1997.7B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "combinations",
            "primes",
            "remainder",
            "square"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.1997.8B.1",
        "qtypes": [
            "Find.All",
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "combinations",
            "primes",
            "remainder",
            "square"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.1997.8B.1",
        "qtypes": [
            "Find.All",
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "arithmetic-progression"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.1998.7B.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "arithmetic-progression"
        ],
        "genre": [],
        "id": "EE.PK.1998.7B.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.1998.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "EE.PK.1998.9B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "fill-in-table"
        ],
        "id": "EE.PK.1999.7B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "word-problem"
        ],
        "id": "EE.PK.1999.7B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.1999.8B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "full-square",
            "decimal-notation"
        ],
        "genre": [],
        "id": "EE.PK.1999.9B.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "word-problem"
        ],
        "id": "EE.PK.2000.7B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "monotonic-sequence"
        ],
        "genre": [
            "string-counting"
        ],
        "id": "EE.PK.2000.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "system-of-equations"
        ],
        "genre": [],
        "id": "EE.PK.2000.9B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "EE.PK.2001.7B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "factorial"
        ],
        "genre": [
            "procedure"
        ],
        "id": "EE.PK.2001.8B.1",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "word-problem"
        ],
        "id": "EE.PK.2001.9B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility",
            "power",
            "quadratic-equation"
        ],
        "genre": [],
        "id": "EE.PK.2001.9B.3",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "arithmetic-progression"
        ],
        "genre": [
            "word-problem"
        ],
        "id": "EE.PK.2002.7B.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "arithmetic-progression"
        ],
        "genre": [],
        "id": "EE.PK.2002.8B.1",
        "qtypes": [
            "Find.All",
            "NoteOnProof"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2003.7B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.PK.2003.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "word-problem"
        ],
        "id": "EE.PK.2003.8B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.PK.2004.7B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "full-square"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2004.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "word-problem"
        ],
        "id": "EE.PK.2004.8B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "square",
            "primes",
            "multiple"
        ],
        "genre": [
            "fill-in-table"
        ],
        "id": "EE.PK.2005.7B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "full-square",
            "sum-of-digits",
            "remainder",
            "divisibility"
        ],
        "genre": [
            "fill-in-table"
        ],
        "id": "EE.PK.2005.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "string-counting"
        ],
        "id": "EE.PK.2006.7B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "combinations"
        ],
        "genre": [
            "string-counting"
        ],
        "id": "EE.PK.2006.8B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [
            "word-problem"
        ],
        "id": "EE.PK.2007.7B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2007.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2008.7B.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "geometric-progression"
        ],
        "genre": [],
        "id": "EE.PK.2008.8B.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "arithmetic-progression"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2009.7B.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "combinations"
        ],
        "genre": [],
        "id": "EE.PK.2009.8B.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2010.7B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2010.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "full-square"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2010.10.5",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.try",
            "notation.algor.square5",
            "notation.dec.numdigits.square",
            "alg.tra.factor.sqdiff"
        ]
    },
    {
        "concepts": [
            "monotonic-sequence",
            "divisibility",
            "sum-of-digits"
        ],
        "genre": [],
        "id": "EE.PK.2011.7B.1",
        "qtypes": [
            "Find.Min",
            "Find.Max",
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "decimal-notation"
        ],
        "genre": [],
        "id": "EE.PK.2011.8B.3",
        "qtypes": [
            "Find.All",
            "Find.Min",
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "remainder"
        ],
        "genre": [],
        "id": "EE.PK.2011.10.3",
        "qtypes": [
            "Prove.ForAll",
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.congr",
            "mod.congr.classes"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "cryptarithm"
        ],
        "id": "EE.PK.2012.7B.3",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [],
        "id": "EE.PK.2012.8B.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.PK.2012.10.4",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.2or5or10.divides",
            "mod.fix.parity"
        ]
    },
    {
        "concepts": [
            "primes",
            "inequality",
            "divisibility"
        ],
        "genre": [],
        "id": "EE.PK.2013.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "full-square",
            "divisibility"
        ],
        "genre": [],
        "id": "EE.PK.2013.10.3",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.congr.pow",
            "comb.full",
            "misc.extr.pigeon"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "cryptarithm"
        ],
        "id": "EE.PK.2014.7B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "word-problem"
        ],
        "id": "EE.PK.2014.8B.1",
        "qtypes": [
            "ProveDisprove.ForAll",
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [],
        "id": "EE.PK.2014.10.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "div.common.lcm",
            "div.common.lcm.mult",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2015.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "optimization"
        ],
        "id": "EE.PK.2015.10.3",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.tra.factor.sqdiff",
            "mod.fix.parity",
            "comb.full",
            "alg.linear.equations"
        ]
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [],
        "id": "EE.PK.2015.10.6",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.define",
            "misc.try",
            "misc.ind"
        ]
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [],
        "id": "EE.PK.2016.7B.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [],
        "id": "EE.PK.2016.8B.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "lcm"
        ],
        "genre": [],
        "id": "EE.PK.2016.10.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.expr.prop",
            "div.common.lcm.frac"
        ]
    },
    {
        "concepts": [
            "square"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.PK.2016.10.4",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.tra.binom.complsquare",
            "alg.ineq.square",
            "alg.ineq.equations"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.PK.2017.7B.1",
        "qtypes": [
            "Find.All",
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.PK.2017.8B.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.PK.2017.10.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "div.fta.proc",
            "alg.tra.pow.prod",
            "div.fta.pow.expsystem",
            "alg.linear.equations"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.PK.2017.10.3",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.symm",
            "misc.try",
            "seq.arithm.expr",
            "alg.poly.homo"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.PK.2018.10.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.expr",
            "notation.dec.combine.poly",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.PK.2019.7B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.PK.2019.8B.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "linear-expression"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.PK.2019.10.3",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.extr.param",
            "mod.congr.sumdiff",
            "misc.try",
            "seq.arithm.mod.gaps"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LO.2010.10.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.ineq.equations",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LO.2011.10.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "square-root",
            "arithmetic-mean",
            "geometric-mean"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LO.2012.10.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "factorial"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LO.2012.10.5",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power-sums"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LO.2013.10.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.congr.pow",
            "notation.divrules.3or9.remainder",
            "mod.congr.sumdiff",
            "mod.eq.contradict"
        ]
    },
    {
        "concepts": [
            "floor"
        ],
        "genre": [],
        "id": "EE.LO.2014.10.1",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "game"
        ],
        "id": "EE.LO.2014.10.5",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "decimal-fractions"
        ],
        "genre": [],
        "id": "EE.LO.2015.10.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "sequence-properties"
        ],
        "id": "EE.LO.2015.10.4",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LO.2016.10.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LO.2016.10.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "coprimes"
        ],
        "genre": [],
        "id": "EE.LO.2017.10.1",
        "qtypes": [
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "game"
        ],
        "id": "EE.LO.2017.10.5",
        "qtypes": [
            "Algorithm",
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LO.2018.10.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LO.2019.10.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.tra.factor",
            "div.common.gcd.subsequent"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LVS.2009.noorem.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.tra.pow.nest",
            "seq.gaps.squares",
            "alg.ineq.equations",
            "comb.full"
        ]
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "EE.LVS.2009.vanem.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.eq.contradict"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LVT.2009.noorem.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVT.2009.noorem.5",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "sequence-properties"
        ],
        "id": "EE.LVT.2009.vanem.3",
        "qtypes": [
            "ProveDisprove.ForAll",
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisors"
        ],
        "genre": [],
        "id": "EE.LVS.2010.noorem.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "factorial"
        ],
        "genre": [],
        "id": "EE.LVS.2010.noorem.5",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power-sums"
        ],
        "genre": [],
        "id": "EE.LVS.2010.vanem.1",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "integer-polynomial"
        ],
        "genre": [],
        "id": "EE.LVS.2010.vanem.2",
        "qtypes": [
            "ProveDisprove.Exists",
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisors"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVT.2010.noorem.1",
        "qtypes": [
            "Find.All",
            "Find.Min",
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisors"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVT.2010.noorem.1",
        "qtypes": [
            "Find.All",
            "Find.Min",
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisors"
        ],
        "genre": [],
        "id": "EE.LVT.2010.vanem.5",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVS.2011.noorem.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "valuations"
        ],
        "genre": [],
        "id": "EE.LVS.2011.vanem.1",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "div.valu.change"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LVT.2011.noorem.1",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-geometry"
        ],
        "id": "EE.LVT.2011.noorem.5",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "EE.LVT.2011.vanem.1",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LVT.2011.vanem.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVS.2012.noorem.1",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "coprimes"
        ],
        "genre": [],
        "id": "EE.LVS.2012.noorem.2",
        "qtypes": [
            "Prove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "quadratic-equation"
        ],
        "genre": [],
        "id": "EE.LVS.2012.noorem.3",
        "qtypes": [
            "ProveDisprove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [],
        "id": "EE.LVS.2012.vanem.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "remainder"
        ],
        "genre": [],
        "id": "EE.LVS.2012.vanem.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "factorial"
        ],
        "genre": [
            "proving-inequality"
        ],
        "id": "EE.LVS.2012.vanem.3",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "game"
        ],
        "id": "EE.LVT.2012.noorem.1",
        "qtypes": [
            "ProveDisprove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LVT.2012.noorem.5",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVT.2012.vanem.1",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2012.vanem.2",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "functional-equation"
        ],
        "id": "EE.LVT.2012.vanem.5",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVS.2013.noorem.1",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "cryptarithm"
        ],
        "id": "EE.LVS.2013.noorem.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "gcd"
        ],
        "genre": [],
        "id": "EE.LVS.2013.noorem.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "square-root"
        ],
        "genre": [],
        "id": "EE.LVS.2013.vanem.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "EE.LVS.2013.vanem.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "string-counting"
        ],
        "id": "EE.LVT.2013.noorem.1",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2013.noorem.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2013.vanem.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "integer-polynomials"
        ],
        "genre": [],
        "id": "EE.LVT.2013.vanem.5",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVS.2014.noorem.1",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVS.2014.noorem.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "proving-inequality"
        ],
        "id": "EE.LVS.2014.noorem.4",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "EE.LVS.2014.vanem.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2014.noorem.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "decimal-manipulation"
        ],
        "id": "EE.LVT.2014.noorem.2",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "lcm",
            "gcd"
        ],
        "genre": [],
        "id": "EE.LVT.2014.noorem.3",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2014.vanem.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "optimization"
        ],
        "id": "EE.LVT.2014.vanem.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVS.2015.noorem.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVS.2015.noorem.2",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVS.2015.noorem.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVS.2015.noorem.6",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "lcm",
            "gcd"
        ],
        "genre": [],
        "id": "EE.LVS.2015.vanem.1",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "remainder"
        ],
        "genre": [],
        "id": "EE.LVS.2015.vanem.3",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2015.noorem.1",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2015.noorem.3",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisors"
        ],
        "genre": [],
        "id": "EE.LVT.2015.vanem.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "prove-inequality"
        ],
        "id": "EE.LVT.2015.vanem.4",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVS.2016.noorem.2",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "coprimes"
        ],
        "genre": [],
        "id": "EE.LVS.2016.noorem.3",
        "qtypes": [
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "magic-configuration"
        ],
        "id": "EE.LVS.2016.noorem.6",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "floor"
        ],
        "genre": [
            "prove-inequality"
        ],
        "id": "EE.LVS.2016.vanem.2",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "game"
        ],
        "id": "EE.LVS.2016.vanem.3",
        "qtypes": [
            "Algorithm",
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisors"
        ],
        "genre": [
            "magic-configuration"
        ],
        "id": "EE.LVS.2016.vanem.6",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVT.2016.noorem.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "lcm",
            "gcd"
        ],
        "genre": [],
        "id": "EE.LVT.2016.noorem.3",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "parity"
        ],
        "genre": [],
        "id": "EE.LVT.2016.noorem.4",
        "qtypes": [
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "magic-configuration"
        ],
        "id": "EE.LVT.2016.vanem.1",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "cryptarithm"
        ],
        "id": "EE.LVT.2016.vanem.2",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2016.vanem.3",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "valuations"
        ],
        "genre": [],
        "id": "EE.LVS.2017.noorem.3",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "cryptarithm"
        ],
        "id": "EE.LVS.2017.noorem.4",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisors",
            "primes"
        ],
        "genre": [],
        "id": "EE.LVS.2017.vanem.2",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "mediant-of-fractions"
        ],
        "genre": [],
        "id": "EE.LVS.2017.vanem.3",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "build-expression"
        ],
        "id": "EE.LVT.2017.noorem.2",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "EE.LVT.2017.noorem.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-geometry"
        ],
        "id": "EE.LVT.2017.vanem.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "EE.LVT.2017.vanem.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVS.2018.noorem.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "lcm",
            "gcd"
        ],
        "genre": [],
        "id": "EE.LVS.2018.noorem.3",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "word-problem"
        ],
        "id": "EE.LVS.2018.noorem.4",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "fill-in-table"
        ],
        "id": "EE.LVS.2018.noorem.6",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "procedure"
        ],
        "id": "EE.LVS.2018.vanem.3",
        "qtypes": [
            "Algorithm",
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2018.noorem.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "EE.LVT.2018.noorem.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "procedure"
        ],
        "id": "EE.LVT.2018.noorem.4",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "EE.LVT.2018.vanem.1",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "composite-numbers"
        ],
        "genre": [],
        "id": "EE.LVT.2018.vanem.3",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "special-numbers"
        ],
        "id": "LV.NO.2000.7.4",
        "qtypes": [
            "Find.Any",
            "Find.Count",
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.3or9.remainder",
            "seq.gaps",
            "seq.arithm.mod"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "making-moves"
        ],
        "id": "LV.NO.2000.7.5",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [
            "LV.NO.2019.8.4"
        ],
        "tasks": [
            "misc.invar.expr"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "magic-configuration"
        ],
        "id": "LV.NO.2000.8.5",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.invar.expr",
            "alg.series.sum",
            "misc.try"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "fill-in-table"
        ],
        "id": "LV.NO.2000.9.2",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.extr"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2000.9.4",
        "qtypes": [
            "Find.Any",
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.expr"
        ]
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [],
        "id": "LV.NO.2000.10.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "fill-in-table"
        ],
        "id": "LV.NO.2000.10.2",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2000.10.5",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2000.11.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [
            "LV.NO.2001.11.1"
        ],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2000.11.4",
        "qtypes": [
            "Prove.ForAll",
            "Find.Any",
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2000.12.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [
            "LV.NO.2001.12.1",
            "LV.NO.2003.12.1",
            "LV.NO.2004.12.1"
        ],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2001.7.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.congr",
            "al.inequality.intervals"
        ]
    },
    {
        "concepts": [
            "coprimes"
        ],
        "genre": [],
        "id": "LV.NO.2001.7.4",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.extr.pigeon",
            "comb.full"
        ]
    },
    {
        "concepts": [
            "primes",
            "composite-numbers"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LV.NO.2001.8.3",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.2or5or10.divides",
            "nt.divisibility.constructions"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2001.9.1",
        "qtypes": [
            "Prove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2001.9.5",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [],
        "id": "LV.NO.2001.10.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "square-root",
            "decimal-fractions"
        ],
        "genre": [],
        "id": "LV.NO.2001.10.4",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "LV.NO.2001.11.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [
            "LV.NO.2002.11.1"
        ],
        "tasks": []
    },
    {
        "concepts": [
            "fibonacci-sequence"
        ],
        "genre": [],
        "id": "LV.NO.2001.12.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "optimization"
        ],
        "id": "LV.NO.2002.7.3",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "div.prop.primes.small",
            "misc.invar.parity"
        ]
    },
    {
        "concepts": [
            "arithmetic-progression"
        ],
        "genre": [],
        "id": "LV.NO.2002.8.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.invar.parity",
            "al.inequality.extremalelement",
            "misc.invar.congr"
        ]
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "LV.NO.2002.9.1",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2002.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2002.10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2002.10.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2002.11.2",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [
            "LV.NO.2003.11.1",
            "LV.NO.2004.11.1"
        ],
        "tasks": []
    },
    {
        "concepts": [
            "irrational-numbers",
            "rational-numbers"
        ],
        "genre": [],
        "id": "LV.NO.2002.12.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "composite-numbers"
        ],
        "genre": [],
        "id": "LV.NO.2003.7.4/LV.NO.2005.7.1",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.graph.bipartite",
            "mod.fix.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2003.8.3",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "div.fta"
        ]
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "LV.NO.2003.9.1",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2003.9.5",
        "qtypes": [
            "Algorithm",
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2003.10.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2003.11.4",
        "qtypes": [
            "ProveDisprove.Other",
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2003.12.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [
            "LV.NO.2000.12.1"
        ],
        "tasks": []
    },
    {
        "concepts": [
            "geometric-progression",
            "real-numbers"
        ],
        "genre": [],
        "id": "LV.NO.2003.12.5",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "composite-numbers"
        ],
        "genre": [],
        "id": "LV.NO.2004.7.1",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.graph.bipartite",
            "div.prop.primes.small",
            "misc.invar.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2004.8.1",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [
            "LV.NO.2003.8.3"
        ],
        "tasks": [
            "div.fta"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2004.8.2",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [
            "[Benford's Law](https://en.wikipedia.org/wiki/Benford%27s_law)",
            "[Ideal Voting](https://meduza.io/feature/2017/01/13/itogi-vyborov-v-gosdumu-okazalis-slishkom-idealnymi)",
            "LV.NO.2005.8.1"
        ],
        "tasks": [
            "notation.dec.numdigits",
            "al.inequality.estimates"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2004.9.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2004.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "palindrome"
        ],
        "genre": [],
        "id": "LV.NO.2004.10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2004.11.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2004.12.1",
        "qtypes": [],
        "seeAlso": [
            "LV.NO.2000.12.1"
        ],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.7.4",
        "qtypes": [],
        "seeAlso": [
            "[Semiperfect number](https://en.wikipedia.org/wiki/Semiperfect_number)"
        ],
        "tasks": [
            "div.fta.divisors.frac",
            "misc.extr.param",
            "mod.fix.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.8.1",
        "qtypes": [],
        "seeAlso": [
            "LV.NO.2004.8.2"
        ],
        "tasks": [
            "notation.dec.numdigits",
            "al.inequality.estimates"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "games"
        ],
        "id": "LV.NO.2005.8.3",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "div.common.lcm",
            "div.prop.primes.inf",
            "div.fta"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.9.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.9.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.10.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.11.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.11.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2005.12.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.7.4/LV.NO.2007.7.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "div.fta.divisors.frac",
            "alg.ineq.monotonicity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.8.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.tra.binom.complsquare"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.8.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "mod.period",
            "mod.congr.classes"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.9.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.11.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.11.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2006.12.5",
        "qtypes": [],
        "seeAlso": [
            "LV.NO.2007.12.2"
        ],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2007.7.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "div.common.gcd.bezout",
            "div.fta",
            "alg.tra.pow.nest"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2007.8.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "nt.divisibility.multiples",
            "div.common.lcm"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2007.9.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2007.10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2007.11.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2007.12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2008.7.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "div.common.gcd.bezout",
            "div.fta",
            "alg.tra.pow.nest"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2008.7.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.series.mean",
            "alg.ineq.equations",
            "nt.divisibility.multiples"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2008.8.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "nt.decnotation.sumofdigits",
            "misc.invar.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2008.9.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2008.10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2008.11.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2008.12.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2009.7.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "div.common.gcd.bezout",
            "div.fta",
            "alg.tra.pow.nest"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2009.7.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "div.fta.divisors.num",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2009.8.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.linear.comb",
            "mod.congr.classes"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2009.8.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "mod.exp",
            "mod.congr.classes"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2009.9.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2009.10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2009.10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2009.11.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2009.12.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.11.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.7.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "nt.divisibility.multiples",
            "div.fta.divisors.test"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.8.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.tra.factor.sqdiff",
            "div.prop.primes.small",
            "alg.series.prod"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.8.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.3or9.remainder",
            "notation.dec.combine"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.9.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.9.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.tra.binom.newton",
            "div.prop.add",
            "div.prop.prod"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "misc.try",
            "mod.fix.parity",
            "alg.tra.pow.prod",
            "div.valu.prop.prod",
            "div.valu.prop.min",
            "mod.eq.contradict"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.11.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2010.12.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2011.7.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "al.sym.grouping",
            "mod.congr.classes"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2011.7.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "nt.divisibility.multiples",
            "div.fta.divisors.test"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2011.8.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.dec.combine",
            "notation.divrules.3or9.remainder"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2011.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2011.10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2011.11.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2011.12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.7.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "comb.graph.bfs"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.7.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.101"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.8.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.tra.factor.sqdiff"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.8.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.11",
            "div.prop.euclidlemma"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.9.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "seq.arithm.mod.gaps"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "misc.try",
            "notation.dec.numdigits.prod"
        ]
    },
    {
        "concepts": [
            "palindrome"
        ],
        "genre": [],
        "id": "LV.NO.2012.11.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.11.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2012.12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.7.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.ineq.equations",
            "comb.graph.bipartite"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.7.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.composite",
            "nt.divisibility.multiples"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.7.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "misc.invar.congr"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.8.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.tra.factor.sqdiff"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.8.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "comb.count.mult",
            "comb.count.complement"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.8.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "comb.full.backtrack",
            "alg.tra.pow.nest"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.9.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.11.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.11.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2013.12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2014.7.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.composite",
            "nt.divisibility.multiples"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2014.8.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "comb.count.mult",
            "comb.count.complement"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2014.9.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2014.10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "seq.arithm.expr",
            "seq.arithm.numestimate",
            "seq.arithm.pairsum",
            "misc.extr.pigeon"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2014.11.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2014.11.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2014.12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2014.12.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.7.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "misc.invar.congr",
            "misc.invar.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.7.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "comb.constr.color",
            "mod.fix.parity",
            "div.prop.primes.small",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.8.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "mod.congr.classes"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.8.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "misc.invar.congr"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.9.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.3or9.divides",
            "misc.invar"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "seq.arithm.summation",
            "div.fta.proc",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "misc.try",
            "div.fta.pow.other",
            "mod.fix.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.11.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.12.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2015.12.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2016.7.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.3or9.divides",
            "notation.divrules.11",
            "notation.divrules.composite"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2016.7.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "misc.symm.rename",
            "misc.extr.param"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2016.8.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.2or5or10.divides"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2016.9.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2016.9.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2016.10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "seq.gaps",
            "misc.ind"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2016.10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "mod.congr.pow",
            "mod.congr.pow",
            "misc.extr.pigeon"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2016.11.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2016.12.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2017.7.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2017.8.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2017.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2017.9.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2017.10.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.2or5or10.divides",
            "notation.divrules.pow2or5.divides",
            "notation.divrules.3or9.divides",
            "notation.divrules.composite",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2017.11.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2017.12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2018.7.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2018.7.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2018.8.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2018.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2018.10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.3or9.divides",
            "notation.dec.numdigits.sum",
            "comb.constr.alpha"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2018.11.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2018.12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.NO.2018.12.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "LV.NO.2019.7.4",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "game"
        ],
        "id": "LV.NO.2019.7.5",
        "qtypes": [
            "Algorithm",
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "making-moves"
        ],
        "id": "LV.NO.2019.8.4",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [
            "LV.NO.2000.7.5"
        ],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [],
        "id": "LV.NO.2019.8.5",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LV.NO.2019.9.5",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "LV.NO.2019.10.5",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.2or5or10.divides",
            "div.fta.proc"
        ]
    },
    {
        "concepts": [
            "linear-expression",
            "primes"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "LV.NO.2019.11.5",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "LV.NO.2019.12.5",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "integer-polynomial"
        ],
        "genre": [],
        "id": "LV.VO.2011.10.4",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.poly.prop.valdiff",
            "alg.tra.factor.powdiff"
        ]
    },
    {
        "concepts": [
            "full-square"
        ],
        "genre": [],
        "id": "LV.VO.2012.10.3",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.try",
            "seq.geom.summation",
            "seq.geom.decnotation"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "LV.VO.2013.10.1",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.symm",
            "alg.ineq.monotonicity"
        ]
    },
    {
        "concepts": [
            "fibonacci-sequence",
            "full-square"
        ],
        "genre": [],
        "id": "LV.VO.2013.10.4",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.recur.fibonacci",
            "seq.prop.periodic.finstate",
            "mod.congr.pow"
        ]
    },
    {
        "concepts": [
            "integer-polynomials"
        ],
        "genre": [],
        "id": "LV.VO.2014.10.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.poly.division",
            "div.fta.divisors.num"
        ]
    },
    {
        "concepts": [
            "linear-expression"
        ],
        "genre": [
            "optimization"
        ],
        "id": "LV.VO.2014.10.3",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.arithm.mod.all",
            "alg.ineq.monotonicity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.VO.2015.10.2",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "div.prop.prod",
            "mod.fix.parity",
            "mod.congr.poly"
        ]
    },
    {
        "concepts": [
            "full-powers"
        ],
        "genre": [],
        "id": "LV.VO.2016.10.1",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "div.fta.pow",
            "alg.linear.equations"
        ]
    },
    {
        "concepts": [
            "long-sums"
        ],
        "genre": [],
        "id": "LV.VO.2016.10.3",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.tra.frac",
            "alg.series.sum"
        ]
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LV.VO.2017.10.2",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.2or5or10.divides",
            "notation.dec.combine.split",
            "mod.congr.sumdiff",
            "comb.full"
        ]
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [],
        "id": "LV.VO.2018.10.3",
        "qtypes": [
            "Prove.Exists",
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.2or5or10.divides",
            "notation.divrules.3or9.divides",
            "notation.dec.combine.padding"
        ]
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "LV.VO.2019.10.1",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.try",
            "mod.fix.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "LV.VO.2019.10.3",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.exp",
            "notation.divrules.composite"
        ]
    },
    {
        "concepts": [
            "square"
        ],
        "genre": [],
        "id": "LV.AO.2000.7.1",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.tra.binom.square"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "optimization"
        ],
        "id": "LV.AO.2000.7.2",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.exp.fermat",
            "div.fta.divisors",
            "nt.divisibility.constructions"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "construction"
        ],
        "id": "LV.AO.2000.7.4",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "div.prop.primes.small",
            "div.prop.primes.small",
            "misc.extr.pigeon",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "construction"
        ],
        "id": "LV.AO.2000.8.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.ind",
            "misc.extr.pigeon"
        ]
    },
    {
        "concepts": [
            "palindrome",
            "decimal-notation"
        ],
        "genre": [],
        "id": "LV.AO.2001.7.2",
        "qtypes": [
            "Prove.ForAll",
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.1001",
            "notation.dec.combine.poly",
            "mod.congr"
        ]
    },
    {
        "concepts": [
            "decimal-notation"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LV.AO.2001.8.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "nt.decnotation.expressions",
            "al.manipulate.smallexpr",
            "al.inequality.estimates"
        ]
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "game"
        ],
        "id": "LV.AO.2002.7.4",
        "qtypes": [
            "Algorithm"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.constr.partition"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "optimization"
        ],
        "id": "LV.AO.2002.7.5",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "al.sym.grouping",
            "misc.extr.pigeon"
        ]
    },
    {
        "concepts": [
            "decimal-notation"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LV.AO.2002.8.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [
            "LV.AO.2001.8.3"
        ],
        "tasks": [
            "nt.decnotation.expressions",
            "al.manipulate.smallexpr",
            "al.inequality.estimates"
        ]
    },
    {
        "concepts": [
            "fibonacci-sequence"
        ],
        "genre": [],
        "id": "LV.AO.2002.8.3",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "al.inequality.extremalelement"
        ]
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "game"
        ],
        "id": "LV.AO.2003.7.3",
        "qtypes": [
            "Algorithm"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.constr.partition"
        ]
    },
    {
        "concepts": [
            "absolute-value"
        ],
        "genre": [
            "making-moves"
        ],
        "id": "LV.AO.2003.7.5",
        "qtypes": [
            "Algorithm"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.invar.parity",
            "al.sym.progressions",
            "comb.full"
        ]
    },
    {
        "concepts": [
            "gcd",
            "coprimes"
        ],
        "genre": [
            "optimization"
        ],
        "id": "LV.AO.2003.8.3",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": [
            "al.inequality.extremalelement",
            "div.prop.primes.small"
        ]
    },
    {
        "concepts": [
            "square"
        ],
        "genre": [],
        "id": "LV.AO.2003.8.5",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "al.sym.grouping",
            "al.manipulate.smallexpr",
            "comb.full"
        ]
    },
    {
        "concepts": [
            "fractions",
            "gcd"
        ],
        "genre": [],
        "id": "LV.AO.2004.7.3",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": [
            "div.common.gcd.euclid",
            "div.prop.primes.small"
        ]
    },
    {
        "concepts": [
            "decimal-notation",
            "divisibility"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LV.AO.2004.8.3",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "nt.decnotation.expressions",
            "nt.divisibility.multiples"
        ]
    },
    {
        "concepts": [
            "sequence"
        ],
        "genre": [
            "making-moves"
        ],
        "id": "LV.AO.2004.8.5",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.recur",
            "al.inequality.intervals"
        ]
    },
    {
        "concepts": [
            "decimal-notation"
        ],
        "genre": [
            "optimization"
        ],
        "id": "LV.AO.2005.7.4",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.composite.zeroes",
            "mod.congr.sumdiff"
        ]
    },
    {
        "concepts": [
            "partition"
        ],
        "genre": [
            "construction"
        ],
        "id": "LV.AO.2005.8.3",
        "qtypes": [
            "Find.Any"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.full.backtrack"
        ]
    },
    {
        "concepts": [
            "sequence"
        ],
        "genre": [],
        "id": "LV.AO.2006.7.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "al.inequality.intervals",
            "nt.divisibility.multiples",
            "mod.congr"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "special-numbers,sum-of-digits"
        ],
        "id": "LV.AO.2006.8.3",
        "qtypes": [
            "Find.Any",
            "ProveDisprove.Other",
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.2or5or10.divides",
            "nt.decnotation.sumofdigits"
        ]
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [
            "optimization"
        ],
        "id": "LV.AO.2007.7.1",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.graph.cycle",
            "div.prop.primes.small"
        ]
    },
    {
        "concepts": [
            "decimal-notation",
            "divisibility",
            "sum-of-digits"
        ],
        "genre": [
            "game"
        ],
        "id": "LV.AO.2007.7.3",
        "qtypes": [
            "Algorithm",
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.gaps",
            "misc.ind.descent"
        ]
    },
    {
        "concepts": [
            "decimal-notation"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LV.AO.2007.8.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "div.fta",
            "alg.ineq.equations"
        ]
    },
    {
        "concepts": [
            "decimal-notation"
        ],
        "genre": [],
        "id": "LV.AO.2008.7.2",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.composite.zeroes",
            "alg.tra.pow.prod"
        ]
    },
    {
        "concepts": [
            "primes",
            "series"
        ],
        "genre": [],
        "id": "LV.AO.2008.8.3",
        "qtypes": [
            "Prove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "div.fta.divisors.num",
            "div.fta.divisors.pair",
            "alg.series.sum"
        ]
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [
            "fill-in-table"
        ],
        "id": "LV.AO.2009.7.3",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.fix.parity",
            "div.prop.primes.small",
            "al.sym.progressions",
            "comb.full"
        ]
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "making-moves"
        ],
        "id": "LV.AO.2009.7.5",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.invar.congr"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "word-problem"
        ],
        "id": "LV.AO.2009.8.4",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "div.fta",
            "comb.full"
        ]
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [
            "construction"
        ],
        "id": "LV.AO.2010.7.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "div.prop.primes.small",
            "div.prop.primes.small",
            "div.fta"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "construction"
        ],
        "id": "LV.AO.2010.7.3",
        "qtypes": [
            "Find.Any"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.linear.comb",
            "comb.full.backtrack"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2010.7.4",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.invar.congr"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2010.8.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.full.syntax"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2010.8.2",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.expr.prop",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2010.10.4",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.arithm.summation",
            "div.fta.proc",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2011.7.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "div.prop.primes.small",
            "div.prop.primes.small"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2011.7.3",
        "qtypes": [
            "Find.Any"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.eq.chinese",
            "nt.divisibility.constructions"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2011.8.1",
        "qtypes": [
            "Find.Any"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.full.syntax"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2011.8.4",
        "qtypes": [
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "nt.decnotation.expressions",
            "div.fta"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2011.8.5",
        "qtypes": [
            "Algorithm",
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.invar.game"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2012.7.1",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.fix.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2012.8.1",
        "qtypes": [
            "Find.Any"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.full.syntax"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2012.8.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.series.mean",
            "alg.ineq.equations"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2012.8.4",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.period"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2012.10.1",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.congr.pow",
            "mod.congr.sumdiff"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2013.7.1",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.ineq.monotonicity",
            "notation.dec.combine.poly",
            "misc.extr.param"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2013.7.3",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.pow2or5.divides",
            "notation.divrules.3or9.remainder",
            "div.fta.pow.square",
            "seq.arithm.summation"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2013.8.1",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.expr",
            "notation.dec.combine.poly.pieces"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2013.10.4",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.geom",
            "misc.extr.pigeon"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2014.7.2",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.fix.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [
            "magic-configuration"
        ],
        "id": "LV.AO.2014.7.4",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.expr.selectvar"
        ]
    },
    {
        "concepts": [
            "decimal-fractions"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LV.AO.2014.8.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.period",
            "notation.algor"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2014.8.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.expr",
            "notation.dec.combine.poly.pieces"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2014.8.5",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.expr.selectvar",
            "comb.full.backtrack"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2014.10.4",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.fix.parity",
            "comb.graph.bipartite",
            "mod.congr.sumdiff",
            "comb.constr.iterative"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2015.7.3",
        "qtypes": [
            "Find.Any",
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.11",
            "notation.divrules.3or9.divides"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2015.8.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.tra.binom.square",
            "misc.ind.descent"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2015.8.3",
        "qtypes": [
            "Find.Any"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.tra.factor.sqdiff",
            "div.prop.primes.small"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2015.10.3",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.try",
            "alg.ineq.transitive"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2016.7.2",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.expr",
            "alg.expr.prop",
            "alg.ineq.equations"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2016.8.1",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": [
            "al.manipulate.smallexpr",
            "alg.tra.factor.sqdiff"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2016.8.2",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.fix.parity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2016.8.3",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.pow2or5.divides",
            "notation.divrules.3or9.divides",
            "notation.divrules.composite",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2016.10.2",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "div.fta.proc",
            "notation.divrules.3or9.remainder",
            "mod.congr.poly",
            "mod.eq.contradict"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2016.10.3",
        "qtypes": [
            "Prove.Exists"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.arithm.expr",
            "alg.tra.binom.square",
            "alg.tra.binom.complsquare"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2017.7.5",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2017.8.5",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2017.10.5",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "div.prop.prod",
            "seq.arithm.mod.all",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2018.7.4",
        "qtypes": [
            "Find.Any"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2018.8.2",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2018.10.4",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.3or9.divides",
            "div.prop.prod",
            "mod.congr.poly"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2019.7.5",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2019.8.5",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2019.10.1",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.ind"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LV.AO.2019.10.4",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "alg.tra.binom.square"
        ]
    },
    {
        "concepts": [
            "full-square"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "LT.LKMMO.2009.7",
        "qtypes": [
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "linear-expression"
        ],
        "genre": [
            "optimization"
        ],
        "id": "LT.LKMMO.2009.8",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "LT.LKMMO.2009.9",
        "qtypes": [
            "Prove.ForAll",
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "arithmetic-progression"
        ],
        "genre": [
            "fill-in-table"
        ],
        "id": "LT.LKMMO.2009.10",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "gcd"
        ],
        "genre": [],
        "id": "LT.LKMMO.2009.13",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "linear-expression"
        ],
        "genre": [],
        "id": "LT.LKMMO.2009.14",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LT.LKMMO.2009.15",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2010.6",
        "qtypes": [
            "Find.Any",
            "ProveDisprove.Exists",
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "LT.LKMMO.2010.7",
        "qtypes": [
            "Find.Any",
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "quadratic-equation",
            "primes"
        ],
        "genre": [],
        "id": "LT.LKMMO.2010.8",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [],
        "id": "LT.LKMMO.2010.9",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "special-numbers"
        ],
        "id": "LT.LKMMO.2010.10",
        "qtypes": [
            "ProveDisprove.Exists",
            "ProveDisprove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "remainder",
            "square"
        ],
        "genre": [
            "fill-in-table"
        ],
        "id": "LT.LKMMO.2010.15",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "integer-polynomial",
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2011.6",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [],
        "id": "LT.LKMMO.2011.7",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "LT.LKMMO.2011.8",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "LT.LKMMO.2011.9",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "absolute-value"
        ],
        "genre": [],
        "id": "LT.LKMMO.2011.10",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LKMMO.2012.6",
        "qtypes": [
            "Find.Any",
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [],
        "id": "LT.LKMMO.2012.7",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "LT.LKMMO.2012.8",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power",
            "inequality"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "LT.LKMMO.2012.9",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "subset",
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2012.10",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility",
            "full-square"
        ],
        "genre": [],
        "id": "LT.LKMMO.2013.6",
        "qtypes": [
            "Find.All",
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "lcm",
            "power"
        ],
        "genre": [],
        "id": "LT.LKMMO.2013.7",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [],
        "id": "LT.LKMMO.2013.8",
        "qtypes": [
            "Find.Any",
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power",
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2013.9",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "full-power"
        ],
        "genre": [],
        "id": "LT.LKMMO.2013.10",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2014.6",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "system-of-equations"
        ],
        "id": "LT.LKMMO.2014.7",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "power"
        ],
        "genre": [],
        "id": "LT.LKMMO.2014.8",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [
            "special-numbers"
        ],
        "id": "LT.LKMMO.2014.9",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "factorial"
        ],
        "genre": [
            "comparison"
        ],
        "id": "LT.LKMMO.2014.10",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "arithmetic-mean"
        ],
        "genre": [],
        "id": "LT.LKMMO.2014.11",
        "qtypes": [
            "Prove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "valuations",
            "power",
            "factorial"
        ],
        "genre": [],
        "id": "LT.LKMMO.2015.6",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "LT.LKMMO.2015.7",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "special-numbers"
        ],
        "id": "LT.LKMMO.2015.8",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "LT.LKMMO.2015.9",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LKMMO.2015.10",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "making-moves"
        ],
        "id": "LT.LKMMO.2015.11",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "game"
        ],
        "id": "LT.LKMMO.2015.15",
        "qtypes": [
            "Algorithm",
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility",
            "primes"
        ],
        "genre": [],
        "id": "LT.LKMMO.2016.6",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "integer-equation"
        ],
        "id": "LT.LKMMO.2016.7",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "square-root"
        ],
        "genre": [
            "integer-equation"
        ],
        "id": "LT.LKMMO.2016.8",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LKMMO.2016.9",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [
            "LV.NO.2018.8.4",
            "LV.NO.2018.10.4",
            "LV.NO.2018.11.4"
        ],
        "tasks": []
    },
    {
        "concepts": [
            "power",
            "inequality",
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2016.10",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "game"
        ],
        "id": "LT.LKMMO.2016.15",
        "qtypes": [
            "Algorithm",
            "Prove.ForAll"
        ],
        "seeAlso": [
            "LV.NO.2019.7.5"
        ],
        "tasks": []
    },
    {
        "concepts": [
            "square",
            "primes",
            "arithmetic-progression",
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2017.6",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "real-numbers",
            "parity"
        ],
        "genre": [],
        "id": "LT.LKMMO.2017.7",
        "qtypes": [
            "ProveDisprove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "sum-of-digits"
        ],
        "genre": [],
        "id": "LT.LKMMO.2017.8",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "full-square",
            "square",
            "inequality"
        ],
        "genre": [],
        "id": "LT.LKMMO.2017.9",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2017.10",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2017.11",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [
            "special-numbers"
        ],
        "id": "LT.LKMMO.2018.6",
        "qtypes": [
            "Find.Any",
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "full-square",
            "power"
        ],
        "genre": [],
        "id": "LT.LKMMO.2018.7",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "square"
        ],
        "genre": [],
        "id": "LT.LKMMO.2018.8",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "valuations"
        ],
        "genre": [],
        "id": "LT.LKMMO.2018.9",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "divisibility"
        ],
        "genre": [],
        "id": "LT.LKMMO.2018.10",
        "qtypes": [
            "Algorithm",
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2009.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2009.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2010.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2010.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2011.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2011.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2011.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2012.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2013.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2013.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2014.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2015.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2016.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2017.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LDK.2018.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2010.9_10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2010.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2010.11_12.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2010.11_12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2011.9_10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2011.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2011.11_12.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2011.11_12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "composite-numbers",
            "divisibility"
        ],
        "genre": [],
        "id": "LT.VILNIUS.2011.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VILNIUS.2011.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2012.9_10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2012.9_10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2012.11_12.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2012.11_12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2012.11_12.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2013.9_10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2013.9_10.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2013.9_10.4A",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2013.11_12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "real-numbers"
        ],
        "genre": [],
        "id": "LT.RAJ.2013.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2014.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2015.9_10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2015.9_10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "real-numbers",
            "irrational-numbers"
        ],
        "genre": [],
        "id": "LT.RAJ.2015.9_10.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2015.11_12.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2015.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2015.11_12.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2016.9_10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2016.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2016.11_12.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2016.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2016.11_12.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2017.9_10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2017.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2017.11_12.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2017.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2017.11_12.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2018.9_10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2018.9_10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2018.9_10.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2018.11_12.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2018.11_12.5",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2019.9_10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2019.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2019.11_12.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2019.11_12.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.RAJ.2019.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2010.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "remainder"
        ],
        "genre": [],
        "id": "LT.LMMO.2010.11_12.4",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2011.9_10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2011.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2011.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2012.9_10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2012.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2012.11_12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2013.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2013.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2014.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2014.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2015.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2015.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2016.9_10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2016.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2016.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2017.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2017.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2018.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2018.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2019.9_10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2019.11_12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.LMMO.2019.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2016.9.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.poly.division",
            "alg.ineq.equations",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2016.10.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "div.fta",
            "div.fta.pow.other",
            "div.common.lcm.maxexp",
            "seq.arithm.mod.gaps",
            "mod.eq.chinese"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2016.11_12.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2016.11_12.3",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2017.9.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.dec.numdigits.prod",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2017.10.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2017.10.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "alg.tra.binom.complsquare",
            "seq.gaps.squares",
            "alg.ineq.monotonicity",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2017.11_12.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2017.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "misc.invar.game"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2018.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2018.10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "div.fta.divisors.num",
            "div.fta.divisors.struct"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2018.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2019.9.1",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2019.9.2",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "misc.invar.game",
            "mod.fix.parity",
            "misc.ind.least"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2019.9.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "mod.fix.lastdigits",
            "mod.eq",
            "misc.symm",
            "comb.full",
            "notation.divrules.pow2or5.divides"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2019.10.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.3or9.remainder",
            "misc.invar",
            "mod.congr.prod"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "LT.VUMIF.2019.11_12.4",
        "qtypes": [],
        "seeAlso": [],
        "tasks": [
            "notation.divrules.3or9.remainder",
            "mod.congr.prod",
            "mod.eq.chinese",
            "alg.ineq.monotonicity",
            "comb.full"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.36",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [],
        "tasks": [
            "div.common.gcd"
        ]
    },
    {
        "concepts": [
            "square-root"
        ],
        "genre": [],
        "id": "BBK2012.P1.52",
        "qtypes": [
            "ProveDisprove.Exists",
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.gaps.geom"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.94",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [
            "BBK2012.P1.36"
        ],
        "tasks": [
            "div.common.gcd"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.99",
        "qtypes": [
            "Find.Max"
        ],
        "seeAlso": [
            "LV.NO.2001.7.4"
        ],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.104",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.recur.linear",
            "misc.invar.expr",
            "misc.ind"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.115",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.119",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.arithm.mod.all"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.121",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.recur.other",
            "misc.invar.expr",
            "misc.ind"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.122",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": [
            "seq.arithm.mod",
            "seq.arithm.numestimate",
            "misc.symm.periodicity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.123",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": [
            "div.common.lcm",
            "seq.arithm.mod",
            "misc.symm.periodicity",
            "seq.arithm.mod",
            "seq.arithm.numestimate"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.124",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": [
            "comb.count.inclexcl",
            "misc.symm.periodicity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.125",
        "qtypes": [
            "Find.Count"
        ],
        "seeAlso": [],
        "tasks": [
            "mod.eq.chinese",
            "misc.symm.periodicity"
        ]
    },
    {
        "concepts": [
            "mutual-primes",
            "gcd"
        ],
        "genre": [],
        "id": "BBK2012.P1.126",
        "qtypes": [
            "Find.Any"
        ],
        "seeAlso": [],
        "tasks": [
            "misc.symm.periodicity"
        ]
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.127",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.128",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.129",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.130",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.131",
        "qtypes": [
            "Find.All"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P1.132",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P2.16",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P2.21",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P2.22",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P2.23",
        "qtypes": [
            "Find.Only"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P2.24",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [
            "BBK2012.P1.52"
        ],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.75",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.76",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.77",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.78",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.79",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.80",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.81",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.82",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.83",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.84",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.85",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.86",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.87",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.88",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.89",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.90",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.91",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.92",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.108",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.109",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.110",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.111",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.112",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.113",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.114",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.115",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.116",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.117",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [],
        "id": "BBK2012.P3.118",
        "qtypes": [],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "recurrent-sequence",
            "primes",
            "divisibility"
        ],
        "genre": [],
        "id": "BBK2012.P4.89",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "recurrent-sequence"
        ],
        "genre": [
            "making-moves"
        ],
        "id": "BBK2012.P4.115",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "recurrent-sequence"
        ],
        "genre": [],
        "id": "BBK2012.P4.116",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "recurrent-sequence"
        ],
        "genre": [],
        "id": "BBK2012.P4.117",
        "qtypes": [
            "Prove.NotExists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "recurrent-sequence"
        ],
        "genre": [],
        "id": "BBK2012.P4.118",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "fibonacci-sequence",
            "arithmetic-progression"
        ],
        "genre": [],
        "id": "BBK2012.P4.119",
        "qtypes": [
            "Find.Min"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "recurrent-sequence"
        ],
        "genre": [],
        "id": "BBK2012.P4.120",
        "qtypes": [
            "ProveDisprove.Exists"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "full-square",
            "power"
        ],
        "genre": [],
        "id": "BBK2012.P4.121",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "primes",
            "full-power"
        ],
        "genre": [],
        "id": "BBK2012.P4.122",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [],
        "genre": [
            "digit-manipulation"
        ],
        "id": "BBK2012.P4.123",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power"
        ],
        "genre": [],
        "id": "BBK2012.P4.124",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power"
        ],
        "genre": [],
        "id": "BBK2012.P4.125",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power"
        ],
        "genre": [],
        "id": "BBK2012.P4.126",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power"
        ],
        "genre": [],
        "id": "BBK2012.P4.127",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "composite-numbers"
        ],
        "genre": [
            "digit-manipulation"
        ],
        "id": "BBK2012.P4.128",
        "qtypes": [
            "Prove.Other"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "arithmetic-mean"
        ],
        "genre": [],
        "id": "BBK2012.P4.133",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    },
    {
        "concepts": [
            "power",
            "absolute-value"
        ],
        "genre": [],
        "id": "BBK2012.P4.134",
        "qtypes": [
            "Prove.ForAll"
        ],
        "seeAlso": [],
        "tasks": []
    }
]